// stylelint-disable indentation

// Utilities

$utilities: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$utilities: map-merge(
  (
    // scss-docs-start utils-vertical-align
    'align':
      (
        property: vertical-align,
        class: v,
        values: baseline top middle bottom text-bottom text-top
      ),
    // scss-docs-end utils-vertical-align
    // scss-docs-start utils-float
    'float':
      (
        property: float,
        class: float,
        values: left right none
      ),
    // scss-docs-end utils-float
    // scss-docs-start utils-overflow
    'overflow':
      (
        property: overflow,
        class: over,
        values: auto hidden visible scroll
      ),
    // scss-docs-end utils-overflow
    // scss-docs-start utils-display
    'display':
      (
        responsive: true,
        property: display,
        class: null,
        values: (
          inline: inline,
          i-block: inline-block,
          block: block,
          grid: grid,
          i-grid: inline-grid,
          table: table,
          table-row: table-row,
          table-cell: table-cell,
          flex: flex,
          i-flex: inline-flex,
          hidden: none
        )
      ),
    // scss-docs-end utils-display
    // scss-docs-start utils-shadow
    'shadow':
      (
        property: box-shadow,
        class: shadow,
        values: (
          null: $box-shadow,
          sm: $box-shadow-sm,
          lg: $box-shadow-lg,
          none: none
        )
      ),
    // scss-docs-end utils-shadow
    // scss-docs-start utils-position
    'position':
      (
        property: position,
        class: null,
        values: (
          static: static,
          rel: relative,
          abs: absolute,
          fixed: fixed,
          sticky: sticky
        )
      ),
    'top': (
      property: top,
      values: (
        0: 0,
        // 50: 50%,
        100: 100%
      )
    ),
    'bottom': (
      property: bottom,
      values: (
        0: 0,
        // 50: 50%,
        100: 100%
      )
    ),
    'start': (
      property: left,
      values: (
        0: 0,
        // 50: 50%,
        100: 100%
      )
    ),
    'end': (
      property: right,
      values: (
        0: 0,
        // 50: 50%,
        100: 100%
      )
    ),
    'inset': (
      property: top bottom left right,
      class: 'inset',
      extends: top bottom left right,
      values: 0
    ),
    'inset-x': (
      property: left right,
      class: 'inset-x',
      extends: left right,
      values: 0
    ),
    'inset-y': (
      property: top bottom,
      class: 'inset-y',
      extends: top bottom,
      values: 0
    ),
    'translate-middle': (
      property: transform,
      class: xlat,
      values: (
        n50: translate(-50%, -50%),
        nx50: translateX(-50%),
        ny50: translateY(-50%)
      )
    ),
    // scss-docs-end utils-position
    // scss-docs-start utils-borders
    'border':
      (
        property: border,
        class: b,
        values: (
          null: $border-width solid $border-color,
          0: 0
        )
      ),
    'border-top': (
      property: border-top,
      class: bt,
      values: (
        null: $border-width solid $border-color,
        0: 0
      )
    ),
    'border-end': (
      property: border-right,
      class: br,
      values: (
        null: $border-width solid $border-color,
        0: 0
      )
    ),
    'border-bottom': (
      property: border-bottom,
      class: bb,
      values: (
        null: $border-width solid $border-color,
        0: 0
      )
    ),
    'border-start': (
      property: border-left,
      class: bl,
      values: (
        null: $border-width solid $border-color,
        0: 0
      )
    ),
    'border-x': (
      property: border-left border-right,
      class: bx,
      extends: bl br,
      values: (
        null: $border-width solid $border-color
      )
    ),
    'border-y': (
      property: border-top border-bottom,
      class: by,
      extends: bt bb,
      values: (
        null: $border-width solid $border-color
      )
    ),
    'border-color': (
      property: border-color,
      class: b,
      values:
        map-merge(
          $theme-colors,
          (
            'white': $white
          )
        )
    ),
    // "border-width": (
    //   property: border-width,
    //   class: border,
    //   values: (
    //     1: 1px,
    //     2: 2px,
    //     3: 3px,
    //     4: 4px,
    //     5: 5px
    //   )
    // ),
    // scss-docs-end utils-borders
    // Sizing utilities
    // scss-docs-start utils-sizing
    'width':
      (
        property: width,
        class: w,
        values: (
          // 25: 25%,
          50: 50%,
          // 75: 75%,
          100: 100%,
          auto: auto
        )
      ),
    'max-width': (
      property: max-width,
      class: max-w,
      values: (
        100: 100%
      )
    ),
    'viewport-width': (
      property: width,
      class: vw,
      values: (
        100: 100vw
      )
    ),
    'min-viewport-width': (
      property: min-width,
      class: min-vw,
      values: (
        100: 100vw
      )
    ),
    'height': (
      property: height,
      class: h,
      values: (
        25: 25%,
        33: 33%,
        50: 50%,
        66: 66%,
        75: 75%,
        100: 100%,
        auto: auto
      )
    ),
    // 'max-height': (
    //   responsive: true,
    //   property: max-height,
    //   class: max-vh,
    //   values: (
    //     75: 75vh
    //   )
    // ),
    'viewport-height': (
      responsive: true,
      property: height,
      class: vh,
      values: (
        25: 25vh,
        50: 50vh,
        75: 75vh,
        100: 100vh
      )
    ),
    // 'min-viewport-height': (
    //   property: min-height,
    //   class: min-vh,
    //   values: (
    //     100: 100vh
    //   )
    // ),
    // scss-docs-end utils-sizing
    // Flex utilities
    // scss-docs-start utils-flex
    'flex-direction':
      (
        responsive: true,
        property: flex-direction,
        class: 'dir',
        values: (
          left: row,
          top: column,
          right: row-reverse,
          bottom: column-reverse
        )
      ),
    'flex-wrap': (
      property: flex-wrap,
      class: wrap,
      values: (
        1: wrap,
        0: nowrap,
        1-rev: wrap-reverse
      )
    ),
    // "flex": (
    //   // responsive: true,
    //   property: flex,
    //   class: flex,
    //   values: (
    //     0: 0 0 auto,
    //     1: 1 1 0,
    //     fill: 1 1 auto
    //   )
    // ),
    'flex-grow':
      (
        property: flex-grow,
        class: grow,
        values: 0 1
      ),
    'flex-shrink': (
      property: flex-shrink,
      class: shrink,
      values: 0 1
    ),
    // "gap": (
    //   responsive: true,
    //   property: gap,
    //   class: gap,
    //   values: $spacers
    // ),
    'justify-content':
      (
        responsive: true,
        property: justify-content,
        class: jc,
        values: (
          start: flex-start,
          end: flex-end,
          center: center,
          between: space-between,
          around: space-around,
          evenly: space-evenly
        )
      ),
    'align-items': (
      responsive: true,
      property: align-items,
      class: ai,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch
      )
    ),
    'align-content': (
      responsive: true,
      property: align-content,
      class: ac,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        stretch: stretch
      )
    ),
    'align-self': (
      responsive: true,
      property: align-self,
      class: as,
      values: (
        auto: auto,
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch
      )
    ),
    "order": (
      responsive: true,
      property: order,
      values: (
        first: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        last: 6,
      ),
    ),
    // scss-docs-end utils-flex
    // Margin utilities
    // scss-docs-start utils-spacing
    'margin':
      (
        responsive: true,
        property: margin,
        class: m,
        values:
          map-merge(
            $spacers,
            (
              auto: auto
            )
          )
      ),
    'margin-top': (
      responsive: true,
      property: margin-top,
      class: mt,
      values:
        map-merge(
          $spacers,
          (
            auto: auto
          )
        )
    ),
    'margin-end': (
      responsive: true,
      property: margin-right,
      class: mr,
      values:
        map-merge(
          $spacers,
          (
            auto: auto
          )
        )
    ),
    'margin-bottom': (
      responsive: true,
      property: margin-bottom,
      class: mb,
      values:
        map-merge(
          $spacers,
          (
            auto: auto
          )
        )
    ),
    'margin-start': (
      responsive: true,
      property: margin-left,
      class: ml,
      values:
        map-merge(
          $spacers,
          (
            auto: auto
          )
        )
    ),
    'margin-x': (
      responsive: true,
      property: margin-right margin-left,
      class: mx,
      extends: mr ml,
      values:
        map-merge(
          $spacers,
          (
            auto: auto
          )
        )
    ),
    'margin-y': (
      responsive: true,
      property: margin-top margin-bottom,
      class: my,
      extends: mt mb,
      values:
        map-merge(
          $spacers,
          (
            auto: auto
          )
        )
    ),
    // Negative margin utilities
    // 'negative-margin':
    //   (
    //     responsive: true,
    //     property: margin,
    //     class: -m,
    //     values: $negative-spacers
    //   ),
    'negative-margin-top': (
      responsive: true,
      property: margin-top,
      class: -mt,
      values: $negative-spacers
    ),
    'negative-margin-end': (
      responsive: true,
      property: margin-right,
      class: -mr,
      values: $negative-spacers
    ),
    'negative-margin-bottom': (
      responsive: true,
      property: margin-bottom,
      class: -mb,
      values: $negative-spacers
    ),
    'negative-margin-start': (
      responsive: true,
      property: margin-left,
      class: -ml,
      values: $negative-spacers
    ),
    'negative-margin-x': (
      responsive: true,
      property: margin-right margin-left,
      class: -mx,
      extends: -mr -ml,
      values: $negative-spacers
    ),
    'negative-margin-y': (
      responsive: true,
      property: margin-top margin-bottom,
      class: -my,
      extends: -mt -mb,
      values: $negative-spacers
    ),
    // Padding utilities
    'padding':
      (
        responsive: true,
        property: padding,
        class: p,
        values: $spacers
      ),
    'padding-top': (
      responsive: true,
      property: padding-top,
      class: pt,
      values: $spacers
    ),
    'padding-end': (
      responsive: true,
      property: padding-right,
      class: pr,
      values: $spacers
    ),
    'padding-bottom': (
      responsive: true,
      property: padding-bottom,
      class: pb,
      values: $spacers
    ),
    'padding-start': (
      responsive: true,
      property: padding-left,
      class: pl,
      values: $spacers
    ),
    'padding-x': (
      responsive: true,
      property: padding-right padding-left,
      class: px,
      extends: pr pl,
      values: $spacers
    ),
    'padding-y': (
      responsive: true,
      property: padding-top padding-bottom,
      class: py,
      extends: pt pb,
      values: $spacers
    ),
    // scss-docs-end utils-spacing
    // Text
    // scss-docs-start utils-text
    // "font-family": (
    //   property: font-family,
    //   class: font,
    //   values: (monospace: $font-family-monospace)
    // ),
    // "font-size": (
    //   rfs: true,
    //   property: font-size,
    //   class: fs,
    //   values: $font-sizes
    // ),
    // "font-style": (
    //   property: font-style,
    //   class: txt,
    //   values: italic normal
    // ),
    'font-weight':
      (
        property: font-weight,
        class: txt,
        values: (
          // light: $font-weight-light,
          // lighter: $font-weight-lighter,
          normal: $font-weight-normal,
          bold: $font-weight-bold,
          // bolder: $font-weight-bolder
        )
      ),
    // "line-height": (
    //   property: line-height,
    //   class: leading,
    //   values: (
    //     none: 1,
    //     tight: $line-height-sm,
    //     normal: $line-height-base,
    //     relaxed: $line-height-lg,
    //   )
    // ),
    // "letter-spacing": (
    //   property: letter-spacing,
    //   class: tracking,
    //   values: (
    //     none: 0,
    //     tight: -0.05em,
    //     normal: 0.075em,
    //     wide: 0.1em,
    //   ),
    // ),
    'text-align':
      (
        // responsive: true,
        property: text-align,
        class: txt,
        values: left right center justify
      ),
    // 'text-decoration': (
    //   property: text-decoration,
    //   class: 'txt',
    //   values: (
    //     nodeco: none,
    //     // over: overline,
    //     // under: underline,
    //     // through: line-through,
    //   )
    // ),
    'text-transform': (
      property: text-transform,
      class: txt,
      values: (
        lower: lowercase,
        upper: uppercase,
        cap: capitalize
      )
    ),
    // 'white-space': (
    //   property: white-space,
    //   class: txt,
    //   values: (
    //     wrap: normal,
    //     nowrap: nowrap
    //   )
    // ),
    // 'word-wrap': (
    //   property: word-wrap word-break,
    //   class: txt,
    //   values: (
    //     break: break-word
    //   ),
    //   rtl: false
    // ),
    // scss-docs-end utils-text
    // scss-docs-start utils-color
    'color':
      (
        property: color,
        class: txt,
        // $theme-colors,
        values:
          map-merge(
            $theme-colors,
            (
              'black': $black,
              'white': $white,
              'body': $body-color,
              // "muted": $text-muted,
              // "black-50": rgba($black, .5),
              // "white-50": rgba($white, .5),
              'reset': inherit
            )
          )
      ),
    // scss-docs-end utils-color
    // scss-docs-start utils-bg-color
    'background-color':
      (
        property: background-color,
        class: bg,
        // $theme-colors,
        values:
          map-merge(
            $theme-colors,
            (
              'body': $body-bg,
              'black': $black,
              'white': $white,
              'none': transparent
            )
          )
      ),
    // "background-position": (
    //   property: background-position,
    //   class: bg,
    //   values: top center bottom left right
    // ),
    // "background-position-center": (
    //   property: background-position,
    //   class: bg-c,
    //   values: (
    //     top: top center,
    //     bottom: bottom center,
    //     left: center left,
    //     right: center right
    //   )
    // ),
    // scss-docs-end utils-bg-color
    // "gradient": (
    //   property: background-image,
    //   class: bg,
    //   values: (gradient: var(--#{$variable-prefix}gradient))
    // ),
    // scss-docs-start utils-interaction
    // "user-select": (
    //   property: user-select,
    //   class: select,
    //   values: all auto none
    // ),
    // "cursor": (
    //   property: cursor,
    //   values: (
    //     reset: default,
    //     link: pointer,
    //     busy: progress,
    //     loading: wait
    //   )
    // ),
    // "pointer-events": (
    //   property: pointer-events,
    //   class: evt,
    //   values: none auto,
    // ),
    // scss-docs-end utils-interaction
    // scss-docs-start utils-border-radius
    'rounded':
      (
        responsive: true,
        property: border-radius,
        class: radius,
        values: (
          none: 0,
          sm: $border-radius-sm,
          null: $border-radius,
          lg: $border-radius-lg,
          circle: 50%,
          pill: $border-radius-pill
        )
      ),
    'rounded-top': (
      responsive: true,
      property: border-top-left-radius border-top-right-radius,
      class: radius-top,
      values: (
        null: $border-radius,
        none: 0
      )
    ),
    // "rounded-end": (
    //   property: border-top-right-radius border-bottom-right-radius,
    //   class: radius-right,
    //   values: (null: $border-radius)
    // ),
    'rounded-bottom':
      (
        responsive: true,
        property: border-bottom-right-radius border-bottom-left-radius,
        class: radius-bottom,
        values: (
          null: $border-radius,
          none: 0
        )
      ),
    // "rounded-start": (
    //   property: border-bottom-left-radius border-top-left-radius,
    //   class: radius-left,
    //   values: (null: $border-radius)
    // ),
    // scss-docs-end utils-border-radius
    // scss-docs-start utils-visibility
    // "visibility": (
    //   property: visibility,
    //   class: null,
    //   values: (
    //     visible: visible,
    //     invisible: hidden,
    //   )
    // )
    // scss-docs-end utils-visibility
  ),
  $utilities
);
